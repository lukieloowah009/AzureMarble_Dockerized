[{"/Users/RifkoB/Desktop/GitHub/GeographyWebApp/client/src/index.js":"1","/Users/RifkoB/Desktop/GitHub/GeographyWebApp/client/src/App.js":"2","/Users/RifkoB/Desktop/GitHub/GeographyWebApp/client/src/serviceWorker.js":"3","/Users/RifkoB/Desktop/GitHub/GeographyWebApp/client/src/contexts/AuthContext.js":"4","/Users/RifkoB/Desktop/GitHub/GeographyWebApp/client/src/views/Home/Home.js":"5","/Users/RifkoB/Desktop/GitHub/GeographyWebApp/client/src/firebase.js":"6","/Users/RifkoB/Desktop/GitHub/GeographyWebApp/client/src/views/NotFound.js":"7","/Users/RifkoB/Desktop/GitHub/GeographyWebApp/client/src/components/Header/NavBar.js":"8","/Users/RifkoB/Desktop/GitHub/GeographyWebApp/client/src/components/Authentication/Login.js":"9","/Users/RifkoB/Desktop/GitHub/GeographyWebApp/client/src/components/Authentication/Signup.js":"10","/Users/RifkoB/Desktop/GitHub/GeographyWebApp/client/src/components/Authentication/ForgotPassword.js":"11","/Users/RifkoB/Desktop/GitHub/GeographyWebApp/client/src/components/Map/Map.js":"12","/Users/RifkoB/Desktop/GitHub/GeographyWebApp/client/src/components/Map/DisplayData.js":"13"},{"size":627,"mtime":1612834268267,"results":"14","hashOfConfig":"15"},{"size":803,"mtime":1617561978117,"results":"16","hashOfConfig":"15"},{"size":4951,"mtime":1611623296518,"results":"17","hashOfConfig":"15"},{"size":1654,"mtime":1612834268266,"results":"18","hashOfConfig":"15"},{"size":653,"mtime":1612834268267,"results":"19","hashOfConfig":"15"},{"size":573,"mtime":1612834268266,"results":"20","hashOfConfig":"15"},{"size":113,"mtime":1611623296525,"results":"21","hashOfConfig":"15"},{"size":1109,"mtime":1612831559741,"results":"22","hashOfConfig":"15"},{"size":5729,"mtime":1612834268264,"results":"23","hashOfConfig":"15"},{"size":7191,"mtime":1612834268266,"results":"24","hashOfConfig":"15"},{"size":4962,"mtime":1612834268263,"results":"25","hashOfConfig":"15"},{"size":4066,"mtime":1617563648553,"results":"26","hashOfConfig":"15"},{"size":347,"mtime":1615919683849,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"14lymlw",{"filePath":"31","messages":"32","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/Users/RifkoB/Desktop/GitHub/GeographyWebApp/client/src/index.js",[],["60","61"],"/Users/RifkoB/Desktop/GitHub/GeographyWebApp/client/src/App.js",["62","63","64","65","66","67","68","69"],"/Users/RifkoB/Desktop/GitHub/GeographyWebApp/client/src/serviceWorker.js",[],"/Users/RifkoB/Desktop/GitHub/GeographyWebApp/client/src/contexts/AuthContext.js",[],"/Users/RifkoB/Desktop/GitHub/GeographyWebApp/client/src/views/Home/Home.js",[],"/Users/RifkoB/Desktop/GitHub/GeographyWebApp/client/src/firebase.js",[],"/Users/RifkoB/Desktop/GitHub/GeographyWebApp/client/src/views/NotFound.js",["70"],"import React from 'react';\n\nconst NotFound = () => {\n        return \"Page not found\"\n}\n\nexport default NotFound;\n","/Users/RifkoB/Desktop/GitHub/GeographyWebApp/client/src/components/Header/NavBar.js",["71"],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './NavBar.css';\n\nconst NavBar = () => {\n    return (\n        <div className = \"header\">\n            {/* Logo */}\n            <Link className = \"nav-title\" to=\"/\">\n                <img className = \"nav-logo\" src={ \"/logo192.png\" } alt=\"React logo\" />\n            </Link>\n\n            {/* Page Links */}\n            <div className = \"nav-items\">\n                <Link className = \"nav-link\" to='/Home'>Home</Link>\n                <Link className = \"nav-link\" to='/Register'>Extra Page</Link>\n                <a className = \"nav-link\" target='_blank' rel=\"noopener noreferrer\" href=\"https://reactjs.org/docs/getting-started.html\">\n                    React Docs\n                </a>\n                <a className = \"nav-link\" target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://reactjs.org/tutorial/tutorial.html\">React Tutorial</a>\n                <a className = \"nav-link\" target=\"_blank\" rel=\"noopener norefferer\" href=\"https://nodejs.org/en/docs/\">Node Docs</a>\n            </div>\n\n        </div>\n    )\n};\n\nexport default NavBar;\n","/Users/RifkoB/Desktop/GitHub/GeographyWebApp/client/src/components/Authentication/Login.js",["72","73","74","75"],"import React, {useState, useRef} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport {useAuth} from \"../../contexts/AuthContext\";\nimport {useHistory} from \"react-router-dom\"\nimport Alert from '@material-ui/lab/Alert';\nimport Grow from '@material-ui/core/Grow';\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright Â© '}\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\n                GeographyWebApp\n            </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\n\nexport default function Login() {\n    const classes = useStyles();\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [error, setError] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const history = useHistory();\n    const {login} = useAuth();\n    const [animate, setAnimate] = useState(true);\n\n    async function handleSubmit(e) {\n        e.preventDefault()\n\n        try {\n            setError(\"\")\n            setLoading(true)\n            await login(email, password)\n            history.push(\"/Home\")\n        } catch {\n            setError(\"Failed to sign in\")\n        }\n\n        setLoading(false)\n\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline/>\n            <Grow\n                in={animate}\n                style={{ transformOrigin: '0 0 0' }}\n                {...(animate ? { timeout: 1000 } : {})}\n            >\n                <div className={classes.paper}>\n                    <Avatar className={classes.avatar}>\n                        <LockOutlinedIcon/>\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Log in\n                    </Typography>\n                    {error && <Alert severity=\"error\">{error}</Alert>}\n                    <form className={classes.form} noValidate onSubmit={handleSubmit}>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    id=\"email\"\n                                    label=\"Email Address\"\n                                    name=\"email\"\n                                    autoComplete=\"email\"\n                                    onChange={e => setEmail(e.target.value)}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    name=\"password\"\n                                    label=\"Password\"\n                                    type=\"password\"\n                                    id=\"password\"\n                                    autoComplete=\"current-password\"\n                                    onChange={e => setPassword(e.target.value)}\n                                />\n                            </Grid>\n                        </Grid>\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                            disabled={loading}\n                        >\n                            Log In\n                        </Button>\n                        <Grid container justify=\"flex-end\">\n                            <Grid item>\n                                <Link href=\"/Signup\" variant=\"body2\">\n                                    Need an account? Sign up\n                                </Link>\n                            </Grid>\n                        </Grid>\n                        <Grid container justify=\"flex-end\">\n                            <Grid item>\n                                <Link href=\"/ForgotPassword\" variant=\"body2\">\n                                    Forgot Password?\n                                </Link>\n                            </Grid>\n                        </Grid>\n                    </form>\n\n                </div>\n            </Grow>\n            <Box mt={5}>\n                <Copyright/>\n            </Box>\n        </Container>\n    );\n}\n","/Users/RifkoB/Desktop/GitHub/GeographyWebApp/client/src/components/Authentication/Signup.js",["76","77","78"],"import React, {useState, useRef} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport {useAuth} from \"../../contexts/AuthContext\";\nimport {useHistory} from \"react-router-dom\"\nimport Alert from '@material-ui/lab/Alert';\nimport Grow from '@material-ui/core/Grow';\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright Â© '}\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\n                GeographyWebApp\n            </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\n\nexport default function SignUp() {\n    const classes = useStyles();\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [passwordConfirm, setPasswordConfirm] = useState(\"\");\n    const [error, setError] = useState(\"\");\n    const [message, setMessage] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const history = useHistory();\n    const {signup, verifyEmail} = useAuth();\n    const [animate, setAnimate] = useState(true);\n    const delay = ms => new Promise(res => setTimeout(res, ms));\n\n    async function handleSubmit(e) {\n        e.preventDefault()\n\n\n        if (password !== passwordConfirm) {\n            return setError(\"Passwords do not match\")\n        }\n\n        try {\n            setError(\"\")\n            setMessage(\"\")\n            setLoading(true)\n            await signup(email, password)\n            await verifyEmail()\n            setMessage(\"An email verfication has been sent. You will be redirected in 5 seconds.\")\n            await delay(5000)\n            history.push(\"/Home\")\n        } catch (e) {\n\n\n            if (e.code == \"auth/email-already-in-use\") {\n                setError(\"Email already in use\")\n            } else {\n                setError(\"Failed to create an account\")\n            }\n        }\n        setLoading(false)\n\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline/>\n            <Grow\n                in={animate}\n                style={{transformOrigin: '0 0 0'}}\n                {...(animate ? {timeout: 1000} : {})}\n            >\n                <div className={classes.paper}>\n                    <Avatar className={classes.avatar}>\n                        <LockOutlinedIcon/>\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Sign up\n                    </Typography>\n                    {error && <Alert severity=\"error\">{error}</Alert>}\n                    {message && <Alert severity=\"info\">{message}</Alert>}\n                    <form className={classes.form} noValidate onSubmit={handleSubmit}>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    id=\"email\"\n                                    label=\"Email Address\"\n                                    name=\"email\"\n                                    autoComplete=\"email\"\n                                    onChange={e => setEmail(e.target.value)}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    name=\"password\"\n                                    label=\"Password\"\n                                    type=\"password\"\n                                    id=\"password\"\n                                    autoComplete=\"current-password\"\n                                    onChange={e => setPassword(e.target.value)}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    name=\"password-confirm\"\n                                    label=\"Confirm Password\"\n                                    type=\"password\"\n                                    id=\"password\"\n                                    autoComplete=\"current-password\"\n                                    onChange={e => setPasswordConfirm(e.target.value)}\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <FormControlLabel\n                                    control={<Checkbox value=\"allowExtraEmails\" color=\"primary\"/>}\n                                    label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n                                />\n                            </Grid>\n                        </Grid>\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                            disabled={loading}\n                        >\n                            Sign Up\n                        </Button>\n                        <Grid container justify=\"flex-end\">\n                            <Grid item>\n                                <Link href=\"/Login\" variant=\"body2\">\n                                    Already have an account? Log in\n                                </Link>\n                            </Grid>\n                        </Grid>\n                    </form>\n                </div>\n            </Grow>\n            <Box mt={5}>\n                <Copyright/>\n            </Box>\n        </Container>\n    );\n}\n","/Users/RifkoB/Desktop/GitHub/GeographyWebApp/client/src/components/Authentication/ForgotPassword.js",["79","80","81","82","83"],"import React, {useState, useRef} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport {useAuth} from \"../../contexts/AuthContext\";\nimport Alert from '@material-ui/lab/Alert';\nimport Grow from '@material-ui/core/Grow';\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright Â© '}\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\n                GeographyWebApp\n            </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\n\nexport default function ForgotPassword() {\n    const classes = useStyles();\n    const [email, setEmail] = useState(\"\");\n    const [error, setError] = useState(\"\");\n    const [message, setMessage] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const {resetPassword} = useAuth();\n    const [animate, setAnimate] = useState(true);\n\n    async function handleSubmit(e) {\n        e.preventDefault()\n\n        try {\n            setError(\"\")\n            setMessage(\"\")\n            setLoading(true)\n            await resetPassword(email)\n            setMessage(\"Password reset link has been sent to your email.\")\n        } catch (e) {\n            if (e.code == \"auth/invalid-email\") {\n                setError(\"Email not found. Please sign up first.\")\n            } else {\n                setError(\"Failed to reset password.\")\n            }\n        }\n\n        setLoading(false)\n\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline/>\n            <Grow\n                in={animate}\n                style={{transformOrigin: '0 0 0'}}\n                {...(animate ? {timeout: 1000} : {})}\n            >\n                <div className={classes.paper}>\n                    <Avatar className={classes.avatar}>\n                        <LockOutlinedIcon/>\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Password Reset\n                    </Typography>\n                    {error && <Alert severity=\"error\">{error}</Alert>}\n                    {message && <Alert severity=\"info\">{message}</Alert>}\n                    <form className={classes.form} noValidate onSubmit={handleSubmit}>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    id=\"email\"\n                                    label=\"Email Address\"\n                                    name=\"email\"\n                                    autoComplete=\"email\"\n                                    onChange={e => setEmail(e.target.value)}\n                                />\n                            </Grid>\n                        </Grid>\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                            disabled={loading}\n                        >\n                            Reset Password\n                        </Button>\n                        <Grid container justify=\"center\">\n                            <Grid item>\n                                <Link href=\"/Login\" variant=\"body2\">\n                                    Log in\n                                </Link>\n                            </Grid>\n                        </Grid>\n                    </form>\n                </div>\n            </Grow>\n            <Box mt={5}>\n                <Copyright/>\n            </Box>\n        </Container>\n    );\n}\n","/Users/RifkoB/Desktop/GitHub/GeographyWebApp/client/src/components/Map/Map.js",["84","85"],"/Users/RifkoB/Desktop/GitHub/GeographyWebApp/client/src/components/Map/DisplayData.js",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":2,"column":9,"nodeType":"92","messageId":"93","endLine":2,"endColumn":14},{"ruleId":"90","severity":1,"message":"94","line":2,"column":16,"nodeType":"92","messageId":"93","endLine":2,"endColumn":22},{"ruleId":"90","severity":1,"message":"95","line":2,"column":24,"nodeType":"92","messageId":"93","endLine":2,"endColumn":32},{"ruleId":"90","severity":1,"message":"96","line":3,"column":8,"nodeType":"92","messageId":"93","endLine":3,"endColumn":12},{"ruleId":"90","severity":1,"message":"97","line":4,"column":8,"nodeType":"92","messageId":"93","endLine":4,"endColumn":16},{"ruleId":"90","severity":1,"message":"98","line":6,"column":8,"nodeType":"92","messageId":"93","endLine":6,"endColumn":14},{"ruleId":"90","severity":1,"message":"99","line":7,"column":8,"nodeType":"92","messageId":"93","endLine":7,"endColumn":13},{"ruleId":"90","severity":1,"message":"100","line":8,"column":8,"nodeType":"92","messageId":"93","endLine":8,"endColumn":22},{"ruleId":"90","severity":1,"message":"101","line":1,"column":8,"nodeType":"92","messageId":"93","endLine":1,"endColumn":13},{"ruleId":"102","severity":1,"message":"103","line":21,"column":17,"nodeType":"104","endLine":21,"endColumn":120},{"ruleId":"90","severity":1,"message":"105","line":1,"column":26,"nodeType":"92","messageId":"93","endLine":1,"endColumn":32},{"ruleId":"90","severity":1,"message":"106","line":6,"column":8,"nodeType":"92","messageId":"93","endLine":6,"endColumn":24},{"ruleId":"90","severity":1,"message":"107","line":7,"column":8,"nodeType":"92","messageId":"93","endLine":7,"endColumn":16},{"ruleId":"90","severity":1,"message":"108","line":62,"column":21,"nodeType":"92","messageId":"93","endLine":62,"endColumn":31},{"ruleId":"90","severity":1,"message":"105","line":1,"column":26,"nodeType":"92","messageId":"93","endLine":1,"endColumn":32},{"ruleId":"90","severity":1,"message":"108","line":64,"column":21,"nodeType":"92","messageId":"93","endLine":64,"endColumn":31},{"ruleId":"109","severity":1,"message":"110","line":87,"column":24,"nodeType":"111","messageId":"112","endLine":87,"endColumn":26},{"ruleId":"90","severity":1,"message":"105","line":1,"column":26,"nodeType":"92","messageId":"93","endLine":1,"endColumn":32},{"ruleId":"90","severity":1,"message":"106","line":6,"column":8,"nodeType":"92","messageId":"93","endLine":6,"endColumn":24},{"ruleId":"90","severity":1,"message":"107","line":7,"column":8,"nodeType":"92","messageId":"93","endLine":7,"endColumn":16},{"ruleId":"90","severity":1,"message":"108","line":60,"column":21,"nodeType":"92","messageId":"93","endLine":60,"endColumn":31},{"ruleId":"109","severity":1,"message":"110","line":72,"column":24,"nodeType":"111","messageId":"112","endLine":72,"endColumn":26},{"ruleId":"90","severity":1,"message":"113","line":28,"column":11,"nodeType":"92","messageId":"93","endLine":28,"endColumn":16},{"ruleId":"90","severity":1,"message":"114","line":29,"column":20,"nodeType":"92","messageId":"93","endLine":29,"endColumn":29},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Redirect' is defined but never used.","'Home' is defined but never used.","'NotFound' is defined but never used.","'SignUp' is defined but never used.","'Login' is defined but never used.","'ForgotPassword' is defined but never used.","'React' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'useRef' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'setAnimate' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'delay' is assigned a value but never used.","'fetchData' is defined but never used.","no-global-assign","no-unsafe-negation"]